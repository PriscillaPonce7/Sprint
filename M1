# Definición clase Productos
class Producto:
  def __int__(self, id, nombre, descripcion, cantidad, precio):
      self.id = id
      self.nombre = nombre
      self.descripcion = descripcion
      self.cantidad = cantidad
      self.precio = precio

  def obtener_informacion(self):
    return {
        "id": self.id,
        "nombre": self.nombre,
        "descripcion": self.descripcion,
        "cantidad": self.cantidad,
        "precio": self.precio
    }

# Métodos actualizar_* modifican los atributos correspondientes al producto
  def actualizar_nombre(self, nombre):
      self.nombre = nombre

  def actualizar_descripcion(self, descripcion):
      self.descripcion = descripcion

  def actualizar_cantidad(self, cantidad):
      self.cantidad = cantidad

  def actualizar_precio(self, precio):
      self.precio = (precio)

class Inventario:
  def __init__(self):
      self.productos = {}

  def agregar_producto(self, producto):
      if producto.id in self.productos:
        print(f"Producto con id {producto.id} ya existe.")
      else:
          self.productos[producto.id] = producto
          print(f"Producto con id {producto.id} agregado al inventario.")

  def eliminar_productos(self, id):
      if id in self.productos:
        del self.productos[id]
        print(f"Producto con id {id} eliminado del inventario.")

  def actualizar_producto(self, id, nombre=None, descripcion=None, cantidad=None, precio=None):
      if id in self.productos:
          producto = self.productos[id]
          if nombre is not None:
              producto.actualizar_nombre(nombre)
          if descripcion is not None:
              producto.actualizar_descripcion(descripcion)
          if cantidad is not None:
              producto.actualizar_cantidad(cantidad)
          if precio is not None:
              producto.actualizar_precio(precio)
          print(f"Producto con id {id} actualizado en el inventario.")

      else:
          print(f"Producto con id {id} no encontrado en el inventario.")

  def obtener_informacion_producto(self, id):
      if id in self.productos:
          return self.productos[id].obtener_informacion()
      else:
          return f"Producto con id {id} no encontrado en el inventario."

  def generar_informe(self):
      for producto in self.productos.values():
          print(producto.obtener_informacion())
